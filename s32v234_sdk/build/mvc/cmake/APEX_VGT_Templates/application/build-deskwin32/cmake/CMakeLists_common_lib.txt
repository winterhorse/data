
cmake_minimum_required (VERSION 2.6)

set (LibName "common")
#get_filename_component(LibName ${CMAKE_CURRENT_LIST_DIR} NAME)

set (LIB_DIR ${ARM_COMMON_LIB})

set(common_KERNEL_SRC "${LIB_DIR}/src")
set(common_KERNEL_HEADER "${LIB_DIR}/include")

#message ("common lib dir " ${common_KERNEL_SRC})
#CMAKE_REQUIRED_DEFINITIONS = (-DMyProjectRoot=${VISION_SDK})

# Maps to Visual Studio solution file (LibName.sln)
# The solution will have all targets (exe, lib, dll) 
# as Visual Studio projects (.vcproj)
#project (${LibName})

#file( GLOB srcFilesCPP "${OWN_KERNEL_SRC}/*.cpp")
#file( GLOB srcFilesC "${OWN_KERNEL_SRC}/*.c")
#file( GLOB headerFilesH "${OWN_KERNEL_HEADER}/*.h")
#file( GLOB headerFilesHPP "${OWN_KERNEL_HEADER}/*.hpp")

set (srcFilesC "")
set (headerFilesHPP "")

list(APPEND common_srcFilesCPP "${common_KERNEL_SRC}/time_measure.cpp" "${common_KERNEL_SRC}/swt_arm_report.cpp" "${common_KERNEL_SRC}/base_process_init.cpp")
list(APPEND common_headerFilesH "${VISION_SDK}/include/common_time_measure.h" "${VISION_SDK}/include/common_stringify_macros.h" "${VISION_SDK}/include/common_base_process_init.h" "${common_KERNEL_HEADER}/swt_arm_report.h")

set (common_srcFiles "")
list(APPEND common_srcFiles ${common_srcFilesCPP} ${common_srcFilesC})
set (common_headerFiles "")
list(APPEND common_headerFiles ${common_headerFilesHPP} ${common_headerFilesH})

#message("common src files: " ${img_vid_io_srcFiles})
#message("own kernel cat H files: " ${headerFiles})

LIST(APPEND GEN_DEPENDENCIES ${LibName})

# set(LibFound "")
# find_library(LibFound ${LibName} "${LIB_DIR}/${VS_PROJ_DIR}/Release"  )
# message ("Lib ${LibName} found " ${LibFound})

#add_library(${LibName} STATIC IMPORTED)
#target_sources(${LibName} INTERFACE ${srcFiles} ${headerFiles})
#set_property(TARGET ${LibName} PROPERTY IMPORTED_LOCATION_DEBUG "${LIB_DIR}/${VS_PROJ_DIR}/Debug")
#set_property(TARGET ${LibName} PROPERTY IMPORTED_LOCATION_RELEASE "${LIB_DIR}/${VS_PROJ_DIR}/Release")
#unset(LibFound)

add_library(${LibName} STATIC ${common_srcFiles} ${common_headerFiles} )
source_group("Source Files" FILES ${common_srcFiles})
source_group("Header Files" FILES ${common_headerFiles} )
include_directories("${VISION_SDK}/include" "${common_KERNEL_HEADER}" "${VISION_SDK}/libs/io/semihost/include")

# Creates a folder "c${LIB_SOURCE_DIR}/build-deskwin32/mvc" and adds target 
# project (<LibName>.vcproj) under it
#set_property(TARGET ${LibName} PROPERTY FOLDER "${LIB_SOURCE_DIR}/build-deskwin32/mvc")

# Adds logic to INSTALL.vcproj to copy ${LibName}.lib to destination directory
#install (TARGETS ${LibName} 
#		ARCHIVE DESTINATION ${LIB_SOURCE_DIR}/build-deskwin32/mvc)
