From ef64212c3f2990db319e1f5382e79e131ef6d0b7 Wed Jul 18 16:49:01 2018 +0200
From: Zdenek Valek <zdenek.valek@nxp.com>
Date: Thu, 9 Aug 2018 17:16:00 +0200
Subject: [PATCH] secure monitor: enable Secure Monitor support

Signed-off-by: Daniel Lazar <daniel.lazar@nxp.com>
Signed-off-by: Ludovit Minarik <ludovit.minarik@nxp.com>
Signed-off-by: Catalin Udma <catalin-dan.udma@nxp.com>
Signed-off-by: Zdenek Valek <zdenek.valek@nxp.com>
----

diff --git a/arch/arm/Kconfig b/arch/arm/Kconfig
index eb08e86102..2b272c9794 100644
--- a/arch/arm/Kconfig
+++ b/arch/arm/Kconfig
@@ -723,6 +723,17 @@ config ARCH_ROCKCHIP
 	select DM
 
 endchoice
+config ARMV8_CUSTOM_SMVEC_EN
+	depends on TARGET_S32V234EVB || TARGET_S32V234FVB || TARGET_S32V234PCIE || TARGET_S32V234TMDP
+	bool "Support custom secure monitor vector on ARMv8"
+	default y
+	help
+	  Support of the secure monitor. The secure monitor can be entered from the Linux kernel
+	  if this is enabled. The access is otherwise locked and causes an exception.
+config ARMV8_CUSTOM_SMVEC
+	depends on ARMV8_CUSTOM_SMVEC_EN
+	hex "Custom vector address"
+	default 0xC4f00000
 
 source "arch/arm/mach-at91/Kconfig"
 
diff --git a/arch/arm/cpu/armv8/exceptions.S b/arch/arm/cpu/armv8/exceptions.S
index d2d4d9c56d..4fd42b2972 100644
--- a/arch/arm/cpu/armv8/exceptions.S
+++ b/arch/arm/cpu/armv8/exceptions.S
@@ -139,3 +139,13 @@ _do_fiq:
 _do_error:
 	exception_entry
 	bl	do_error
+
+#ifdef CONFIG_ARMV8_CUSTOM_SMVEC
+ENTRY(install_sm_vectors)
+    stp x0, x1, [sp, #-16]!
+    ldr x0, =CONFIG_ARMV8_CUSTOM_SMVEC
+    msr vbar_el3, x0
+    ldp x0, x1, [sp], #16
+    ret
+ENDPROC(install_sm_vectors)
+#endif
diff --git a/arch/arm/include/asm/arch-s32/s32v234/mc_cgm_regs.h b/arch/arm/include/asm/arch-s32/s32v234/mc_cgm_regs.h
index 64b7f9e565..cccdf10865 100644
--- a/arch/arm/include/asm/arch-s32/s32v234/mc_cgm_regs.h
+++ b/arch/arm/include/asm/arch-s32/s32v234/mc_cgm_regs.h
@@ -263,10 +263,10 @@
 
 #define ENET_PLL_PHI0_FREQ		(500000000)
 #define ENET_PLL_PHI1_FREQ		(1000000000)
-/* ENET_PLL_PHI1_DFS1_FREQ - 350 Mhz*/
+/* ENET_PLL_PHI1_DFS1_FREQ - 120 Mhz*/
 #define ENET_PLL_PHI1_DFS1_EN		(1)
-#define ENET_PLL_PHI1_DFS1_MFI		(2)
-#define ENET_PLL_PHI1_DFS1_MFN		(220)
+#define ENET_PLL_PHI1_DFS1_MFI		(8)
+#define ENET_PLL_PHI1_DFS1_MFN		(85)
 /* ENET_PLL_PHI1_DFS2_FREQ - 350 Mhz*/
 #define ENET_PLL_PHI1_DFS2_EN		(1)
 #define ENET_PLL_PHI1_DFS2_MFI		(2)
diff --git a/arch/arm/include/asm/macro.h b/arch/arm/include/asm/macro.h
index 9bb0efa5ff..e62ce200e2 100644
--- a/arch/arm/include/asm/macro.h
+++ b/arch/arm/include/asm/macro.h
@@ -138,6 +138,9 @@ lr	.req	x30
 .macro armv8_switch_to_el2_m, xreg1
 	/* 64bit EL2 | HCE | SMD | RES1 (Bits[5:4]) | Non-secure EL0/EL1 */
 	mov	\xreg1, #0x5b1
+#ifdef CONFIG_ARMV8_CUSTOM_SMVEC
+	bic	\xreg1, \xreg1, #0x80 /* +SMC */
+#endif
 	msr	scr_el3, \xreg1
 	msr	cptr_el3, xzr		/* Disable coprocessor traps to EL3 */
 	mov	\xreg1, #0x33ff
@@ -159,7 +162,11 @@ lr	.req	x30
 	/* Return to the EL2_SP2 mode from EL3 */
 	mov	\xreg1, sp
 	msr	sp_el2, \xreg1		/* Migrate SP */
+#ifdef CONFIG_ARMV8_CUSTOM_SMVEC
+	ldr	\xreg1, =vectors
+#else
 	mrs	\xreg1, vbar_el3
+#endif
 	msr	vbar_el2, \xreg1	/* Migrate VBAR */
 	mov	\xreg1, #0x3c9
 	msr	spsr_el3, \xreg1	/* EL2_SP2 | D | A | I | F */
diff --git a/arch/arm/include/asm/system.h b/arch/arm/include/asm/system.h
index 83cbce4546..bbd76afb89 100644
--- a/arch/arm/include/asm/system.h
+++ b/arch/arm/include/asm/system.h
@@ -92,6 +92,9 @@ void protect_secure_region(void);
 void smp_kick_all_cpus(void);
 
 void flush_l3_cache(void);
+#ifdef CONFIG_ARMV8_CUSTOM_SMVEC
+void install_sm_vectors(void);
+#endif
 
 #endif	/* __ASSEMBLY__ */
 
diff --git a/arch/arm/lib/bootm.c b/arch/arm/lib/bootm.c
index a477cae010..205b026d42 100644
--- a/arch/arm/lib/bootm.c
+++ b/arch/arm/lib/bootm.c
@@ -276,6 +276,9 @@ static void boot_jump_linux(bootm_headers_t *images, int flag)
 	announce_and_cleanup(fake);
 
 	if (!fake) {
+#ifdef CONFIG_ARMV8_CUSTOM_SMVEC
+		install_sm_vectors();
+#endif
 		do_nonsec_virt_switch();
 		kernel_entry(images->ft_addr, NULL, NULL, NULL);
 	}
-- 
2.11.0

