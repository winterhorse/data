# IPUS
# Function:
# gaussian Filter: FIR filter
# coefficients:
#          
#      |1   2   1|       (right shift) |4   3   4|
# 1/16 |2   4   2|  =>              << |3   2   3|
#      |1   2   1|                     |4   3   4| 
#
# set shift_in/x to 1 pixels
# set shift_out to 1 pixels
# input to line 0,1,2
# out0 : copied input value

.global gauss3x3_start
# set shift_in/x to 1 pixels
# set shift_out to 1 pixels
# input to line 0,1,2
# in to LSB
# out from LSB
# out0 : copied input value

gauss3x3_start:
        // configure ALU and Matrix ALU for shift)
	mov confalu,(0 /*unsigned*/ | (1<<1) /*saturate*/ | (14<<4) /*shr*/)

	// configure adder tree
        mov confaddt,(0 /*w*/ | (0<<2) /*apply mask*/) | (0<<3) /*unsigned*/ | (0<<5) /*shift*/| (0x40 << 9) /* scale*/)

	// shift in first 3 columns, no output
        done gauss3x3_in1,i    // load first pixel
gauss3x3_in1:
	done gauss3x3_in2,i    // load first pixel
gauss3x3_in2:
	done gauss3x3_init,i   // load first pixel


//// mgrad_copyloop:
//        mov loopcnt,640    // copy first 640 pixels from input
//// do copy in left half of the line/image
//        ldot ina4,mgrad_copyloop,ixo
//// add a black line between left and right half	
//        dout zero,generic_select,ixo

gauss3x3_init:
	// populate shift matrix in W register matrix
	mov maskv,0b101000101	// select corner pixel in matrix [8...0]
        mov w,4			// apply shift down by 4 
        mov maskv,0b010101010	// horiz/vert neighbours
        mov w,3			// apply shift down by 3
        mov w4,2		// center pixel shift only by 2

	// store shift matrix from W -> WW register matrix
        swp           		// move shift matrix to ww

	// re-enable all pixels for lsr (scaling)
        mov maskv,0b111111111
	
gauss3x3_loop:
	// apply the shift on all values of ina by ww bits and
	//store result in w
        lsr w,ina,ww            // lsr: logical shift right

	// now we are done and we can write the output and
	// get the next input pixels
        dout clipped,gauss3x3_loop,ixo

	halt
.global gauss3x3_end
gauss3x3_end:
